[gd_scene load_steps=15 format=2]

[ext_resource path="res://Scenes/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://Graphics/Background/Backgourn2.png" type="Texture" id=2]
[ext_resource path="res://Graphics/Background/Backgourn1.png" type="Texture" id=3]
[ext_resource path="res://Graphics/Background/Backgourn3.png" type="Texture" id=4]
[ext_resource path="res://Graphics/Background/Backgourn5.png" type="Texture" id=5]
[ext_resource path="res://Graphics/Background/Backgourn9.png" type="Texture" id=6]
[ext_resource path="res://Scenes/GUI.tscn" type="PackedScene" id=7]
[ext_resource path="res://Graphics/Intro/GameOVer.png" type="Texture" id=8]
[ext_resource path="res://Graphics/Intro/WinScreen.png" type="Texture" id=9]
[ext_resource path="res://Scenes/Rock.tscn" type="PackedScene" id=10]
[ext_resource path="res://Scenes/BigRock.tscn" type="PackedScene" id=11]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var timer                      = 0
var TIME_TO_DANGEROUS_FAZE     = 15
var TIME_TO_SAFE_FAZE          = 15
var is_safe_faze                = true
var number_of_faze             = 1

func str_left_time( faze_over ):
	var output = \"\"
	var minutes = int( (faze_over - timer)/60 )
	output  = str(minutes) if minutes > 9 else \"0\" + str(minutes)
	output += \":\"
	var seconds = int( (faze_over - timer))%60
	output += str(seconds) if seconds > 9 else \"0\" + str(seconds)
	return output

func handle_safe_faze():
	process_to_dangerous_faze()

func process_to_dangerous_faze():
	if timer < TIME_TO_DANGEROUS_FAZE: return
	$GUI/Advice.print_text(\"LOOK OUT !!! TOXIC PLASTIC MICROBES HAS BEEN APPEARED\", null)
	is_safe_faze     = false 
	$Spawner.spawn_enemy( number_of_faze * 4)
	$Spawner.spawn_oil()
	number_of_faze         += 1
	TIME_TO_DANGEROUS_FAZE += 2
	timer                   = 0

var spawn_second_time = true
func spawn_second_part_of_wave():
	if not spawn_second_time: return
	if timer < TIME_TO_DANGEROUS_FAZE/2 : return
	spawn_second_time = false
	$Spawner.spawn_enemy( number_of_faze * 2)

func process_to_safe_faze():
	if timer < TIME_TO_SAFE_FAZE: return
	$GUI/Advice.print_text(\"MICROBES AUTOFAGED THEMSELFS, KEEP IT UP\", null)
	spawn_second_time = true
	is_safe_faze      = true 
	TIME_TO_SAFE_FAZE += 3
	timer  = 0

func handle_dangerous_faze():
	spawn_second_part_of_wave()
	process_to_safe_faze()
		
func update_hud():
	$GUI/Hp.value        = $Player.hp
	$GUI/Energy.value    = $Player.energy
	$GUI/Timer.text      =  \"Time left : \" + str_left_time( TIME_TO_DANGEROUS_FAZE if is_safe_faze else TIME_TO_SAFE_FAZE )
	$GUI/Score.text      = \"SCORE: \" + str(int($Player.score))
	$GUI/Fala.text       = \"Prepare to next wave\" if is_safe_faze else \"WAVE \" + str( number_of_faze )
	$DangerWorld.visible = not is_safe_faze

func fix_player_in_world():
	if $Player.position.x < -1660 : $Player.position.x = -1660
	if $Player.position.x > 3290  : $Player.position.x =  3290
	if $Player.position.y > 2600  : $Player.position.y =  2600
	if $Player.position.y < -1660 : $Player.position.y = -1660
	
func handle_conditions_game_over(delta):
	if $Player.hp > 0: return 
	if Input.is_action_just_released(\"ui_accept\"): 
		get_tree().change_scene(\"res://Scenes/Intro.tscn\")
	var scale                = min( $GUI/Backgourn6.modulate.a + delta, 1 )
	$Player.move_speed       = 0
	$GUI/Backgourn6.modulate = Color( 1,1,1, scale  )

func handle_conditions_win(delta): 
	if $Player.score < 1000: return
	if Input.is_action_just_released(\"ui_accept\"): 
		get_tree().change_scene(\"res://Scenes/Intro.tscn\")
	var scale                = min( $GUI/Backgourn7.modulate.a + delta, 1 )
	$Player.hp               = 100
	$Player.move_speed       = 0
	$GUI/Backgourn7.modulate = Color( 1,1,1, scale  )

func _process(delta):
	timer += delta
	update_hud()
	fix_player_in_world()
	handle_conditions_game_over(delta)
	handle_conditions_win(delta)
	
	if is_safe_faze : handle_safe_faze()
	else : handle_dangerous_faze()"

[sub_resource type="GDScript" id=2]
script/source = "extends Node2D

	
onready var player = get_parent().get_node(\"Player\")

var first  = 250
var second = 450
var third  = 650
var fourth = 850

var tresholds     = [0, 250, 450, 650, 850, 1000, 1500 ]
var current_index = 1
var child

func _ready():
	child = get_children()[ get_child_count() -1]

func _process(delta):
	if player.score > tresholds[current_index] :
		current_index += 1
		child = get_children()[ get_child_count() - current_index]	 
	var points        = player.score             - tresholds[current_index-1]
	var points_needed = tresholds[current_index] - tresholds[current_index-1]
	child.modulate = Color(1,1,1, 1.0 - float(points)/float(points_needed) )
	"

[sub_resource type="GDScript" id=3]
script/source = "extends Node2D

onready var player = get_parent().get_node(\"Player\")

func _ready():
	spawn_rock()
	
var time              = 0
var time_to_spawn     = 2
var number_of_plastic = 0
var max_plastic       = 500
onready var plastic_list = [load( \"res://Scenes/Plastic.tscn\" ),load( \"res://Scenes/Plastic4.tscn\" ),load( \"res://Scenes/Plastic3.tscn\" ),load( \"res://Scenes/Organic.tscn\" ), load( \"res://Scenes/Plastic2.tscn\" )]
onready var enemy_list   = [load( \"res://Scenes/Enemy-Shooter.tscn\" ),load( \"res://Scenes/Enemy-Spinner.tscn\" ), load( \"res://Scenes/Enemy-Shooter2.tscn\" )] 
onready var rock_list    = [load( \"res://Scenes/Rock.tscn\"  )]
onready var oil_list     = [load( \"res://Scenes/Oil.tscn\"  )]



func get_vector_around():
	var x = ( randf() + 0.1 ) * (-1 if randi()%2 == 1 else 1 )
	var y = ( randf() + 0.1 ) * (-1 if randi()%2 == 1 else 1 )
	return Vector2( x, y )

func spawn_oil():
	for i in range(10):
		set_object( 300, 1000, oil_list[ randi()%len(oil_list) ] )

func spawn_rock():
	for i in range(200):
		set_object( 1000, 1300, rock_list[ randi()%len(rock_list) ] )

func spawn_plastic():
	if time < time_to_spawn : return
	if number_of_plastic > max_plastic : return
	time = 0
	for i in range(6):
		set_object( 400, 1000, plastic_list[ randi()%len(plastic_list) ] )
		number_of_plastic += 1

func spawn_enemy(number_of_enemy):
	for i in range( number_of_enemy ):
		set_object( 900, 1, enemy_list[ randi()%len(enemy_list) ] )

func set_object( min_distance, max_distance, object ):
		var around           = get_vector_around()
		var distance         = randi()%max_distance + min_distance
		var instance         = object.instance()
		instance.position      = around * distance + player.position
		get_parent().call_deferred(\"add_child\", instance)

func _process(delta):
	time += delta
	spawn_plastic()"

[node name="Main" type="Node2D"]
script = SubResource( 1 )

[node name="Player" parent="." groups=[
"player",
] instance=ExtResource( 1 )]
position = Vector2( 789, 372 )

[node name="Background_Swapper" type="Node2D" parent="."]
position = Vector2( 862.669, 433.235 )
script = SubResource( 2 )

[node name="6" type="Sprite" parent="Background_Swapper"]
modulate = Color( 1, 1, 1, 0.654902 )
position = Vector2( -127.93, 196.386 )
scale = Vector2( 6.01638, 8.28446 )
texture = ExtResource( 2 )

[node name="5" type="Sprite" parent="Background_Swapper"]
modulate = Color( 1, 1, 1, 0.654902 )
position = Vector2( -127.93, 196.386 )
scale = Vector2( 6.01638, 8.28446 )
texture = ExtResource( 2 )

[node name="4" type="Sprite" parent="Background_Swapper"]
modulate = Color( 1, 1, 1, 0.654902 )
position = Vector2( -127.93, 196.386 )
scale = Vector2( 6.01638, 8.28446 )
texture = ExtResource( 3 )

[node name="3" type="Sprite" parent="Background_Swapper"]
modulate = Color( 1, 1, 1, 0.654902 )
position = Vector2( 354.549, 161.143 )
scale = Vector2( 11.0523, 10.5082 )
texture = ExtResource( 4 )

[node name="2" type="Sprite" parent="Background_Swapper"]
modulate = Color( 1, 1, 1, 0.654902 )
position = Vector2( -127.93, 196.386 )
scale = Vector2( 6.01638, 8.28446 )
texture = ExtResource( 5 )

[node name="1" type="Sprite" parent="Background_Swapper"]
position = Vector2( -343.51, 101.604 )
scale = Vector2( 10.7975, 15.4676 )
texture = ExtResource( 6 )

[node name="GUI" parent="." instance=ExtResource( 7 )]

[node name="Backgourn6" type="Sprite" parent="GUI"]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( 506.472, 348.853 )
scale = Vector2( 0.253184, 0.24 )
texture = ExtResource( 8 )

[node name="Backgourn7" type="Sprite" parent="GUI"]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( 518.267, 302.495 )
scale = Vector2( 0.7, 0.7 )
texture = ExtResource( 9 )

[node name="Spawner" type="Node2D" parent="."]
script = SubResource( 3 )

[node name="Rock_Template3" parent="." instance=ExtResource( 10 )]
position = Vector2( 3874.4, 1098.35 )
rotation = 1.5708
scale = Vector2( 30, 3.77 )

[node name="Rock_Template4" parent="." instance=ExtResource( 10 )]
position = Vector2( -2290.1, 1168.75 )
rotation = 1.5708
scale = Vector2( 30, 3.77 )

[node name="Rock_Template2" parent="." instance=ExtResource( 10 )]
position = Vector2( 676.503, 3220.23 )
scale = Vector2( 30, 3.77 )

[node name="Rock_Template5" parent="." instance=ExtResource( 10 )]
position = Vector2( 425.034, -2235.66 )
scale = Vector2( 30, 3.77 )

[node name="DangerWorld" type="Sprite" parent="."]
modulate = Color( 1, 0.0470588, 0.0196078, 0.282353 )
position = Vector2( 736.336, 717.944 )
scale = Vector2( 8.17174, 13.4776 )
z_index = 20
texture = ExtResource( 4 )

[node name="Rock_Template" parent="." instance=ExtResource( 11 )]
position = Vector2( 499.749, 252.885 )
